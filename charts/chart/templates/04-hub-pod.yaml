---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    app: kubeshark-hub
  {{- if .Values.tap.labels }}
    {{- toYaml .Values.tap.labels | nindent 4 }}
  {{- end }}
  annotations:
  {{- if .Values.tap.annotations }}
    {{- toYaml .Values.tap.annotations | nindent 4 }}
  {{- end }}
  name: kubeshark-hub
  namespace: {{ .Release.Namespace }}
spec:
  containers:
    - command:
        - ./hub
        {{ .Values.tap.debug | ternary "- -debug" "" }}
      env:
        - name: POD_REGEX
          value: '{{ .Values.tap.regex }}'
        - name: NAMESPACES
          value: '{{ gt (len .Values.tap.namespaces) 0 | ternary (join "," .Values.tap.namespaces) "" }}'
        - name: LICENSE
          value: '{{ .Values.license }}'
        - name: SCRIPTING_ENV
          value: '{{ .Values.scripting.env | toJson }}'
        - name: SCRIPTING_SCRIPTS
          value: '[]'
        - name: AUTH_APPROVED_DOMAINS
          value: '{{ gt (len .Values.tap.ingress.auth.approveddomains) 0 | ternary (join "," .Values.tap.ingress.auth.approveddomains) "" }}'
      image: '{{ .Values.tap.docker.registry }}/hub:{{ .Values.tap.docker.tag }}'
      imagePullPolicy: {{ .Values.tap.docker.imagepullpolicy }}
      name: kubeshark-hub
      resources:
        limits:
          cpu: {{ .Values.tap.resources.hub.limits.cpu }}
          memory: {{ .Values.tap.resources.hub.limits.memory }}
        requests:
          cpu: {{ .Values.tap.resources.hub.requests.cpu }}
          memory: {{ .Values.tap.resources.hub.requests.memory }}
  dnsPolicy: ClusterFirstWithHostNet
  serviceAccountName: kubeshark-service-account
  terminationGracePeriodSeconds: 0
  tolerations:
    - effect: NoExecute
      operator: Exists
{{- if not .Values.tap.ignoretainted }}
    - effect: NoSchedule
      operator: Exists
{{- end }}
status: {}
